#!/bin/bash

progname=$(basename $0)
certdir=$( cd "$( dirname "$( readlink -f "${BASH_SOURCE[0]}")" )" && pwd )
server="docs.nesi.org.nz"

ok=0
warning=1
critical=2
unknown=3

ARGS=$(getopt -o c:dn -l "certificate-dir:,debug,nagios" -n "${progname}" -- "$@");

#Bad arguments
if [ $? -ne 0 ]
then
	exit $critical
fi

eval set -- "$ARGS";

debug=false
nagios=false
while true
do
	case "$1" in
	-c|--certificate-dir)
		shift
		if [ -n "$1" ]
		then
			certdir=$1
			shift
		fi
		;;
	-d|--debug)
		shift
		debug=true
		;;
	-n|--nagios)
		shift
		nagios=true
		;;
	--)
		shift
		break
		;;
	esac
done

long_hostname=$(hostname)
case ${long_hostname} in
login-01.uoa.nesi.org.nz)
	machine="pan"
	;;
nesi1)
	machine="fitzroy"
	export http_proxy="http://www-proxy.niwa.co.nz:80"
	export https_proxy="https://www-proxy.niwa.co.nz:80"
	;;
p1n14-c)
	machine="kerr"
	;;	
p2n14-c)
	machine="beatrice"
	;;
bpfen1)
	machine="foster"
	;;
viz0)
	machine="popper"
	;;
*)
	echo "Unknown hostname: ${long_hostname}" 1>&2
	exit $critical
	;;
esac

if [ ! -d "${certdir}" ]
then
	echo "${certdir}: not a directory" 1>&2
	exit $critical
elif [ ! -f "${certdir}/${machine}.key" ]
then
	echo "${certdir}/${machine}.key: not a file" 1>&2
	exit $critical
fi

curl -s -S --cacert ${certdir}/docs.pem --cert ${certdir}/${machine}.pem --key ${certdir}/${machine}.key https://${server}:443/${machine}
curl_status=$?
if [ ${curl_status} -ne 0 ]
then
	echo "Unable to connect to documentation server" 1>&2
	exit $critical
fi

home_dir=$(eval echo ~)
output_file="${home_dir}/modules-$$.txt"

rm -rf "${output_file}"

type=$(type module | tail -n +3)
lmod=false
case "${type}" in
*LMOD* )
	lmod=true
	;;
*modulecmd*)
	true
	;;
*)
	modulecmd_exe=$(which modulecmd)
	if [ $? -ne 0 ]
	then
		echo "Neither Lmod nor Environment Modules could be detected" 1>&2
		exit $critical
	else
		function module () 
		{ 
			eval `"${modulecmd_exe}" bash $*`
		}
	fi
	;;
esac

if [ "${lmod}" = true ]
then
	module_list=$(module avail -t 2>&1 | grep -v ':$')
	command="for mod in ${module_list} ; do module whatis \${mod} 2>&1 ; done"
else
	command="bash -l -c \"module whatis -t\" 2>&1"
fi
eval ${command} | \
	sed -e 's/:\s\+Description:/:/' | \
	grep ': ' | \
	grep -v ":ERROR:" | \
	grep -Ev "[Nn]ot (supported|available)" | \
	grep -v "only available" | \
	sed -e '/^\s*$/d' \
	> "${output_file}"
curl -s -S --cacert ${certdir}/docs.pem --cert ${certdir}/${machine}.pem --key ${certdir}/${machine}.key https://docs.nesi.org.nz:443/${machine} -F myfile=@${output_file}
if [ "${debug}" = true ]
then
	cat "${output_file}"
fi
rm ${output_file}
if [ "${nagios}" = true ]
then
	echo "Module lists for documentation purposes have been successfully updated."
fi
exit $ok
